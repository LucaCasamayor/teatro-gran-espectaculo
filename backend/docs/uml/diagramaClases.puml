@startuml
'=====================
' CLASSES PRINCIPALES
'=====================

class Customer {
  - id: Long
  - name: String
  - lastname: String
  - email: String
  - createdAt: LocalDateTime
  - totalAttendances: int
  - currentStreak: int
  + getTotalAttendances(year: int): int
  + incrementAttendance()
  + resetCurrentStreak()
}

class Event {
  - id: Long
  - title: String
  - type: EventType
  - startDateTime: LocalDateTime
  - endDateTime: LocalDateTime
  - status: EventStatus
  + isOpenForSales(): boolean
}

class TicketOption {
  - id: Long
  - name: String
  - price: BigDecimal
  - capacity: int
  - sold: int
  - version: int
  + getRemaining(): int
  + isReservable(quantity: int): boolean
  + reserve(quantity: int)
}

class Reservation {
  - id: Long
  - status: ReservationStatus
  - createdAt: LocalDateTime
  - paidAt: LocalDateTime
  - loyaltyFree: boolean
  + calculateTotal(): BigDecimal
  + markAsPaid()
}

class ReservationItem {
  - id: Long
  - quantity: int
  - unitPrice: BigDecimal
}

'=====================
' ENUMERACIONES
'=====================

enum EventType {
  THEATER
  RECITAL
  TALK
}

enum EventStatus {
  SCHEDULED
  CANCELLED
  FINISHED
}

enum ReservationStatus {
  PENDING
  PAID
  CANCELLED
}

'=====================
' RELACIONES
'=====================

Customer "1" --> "*" Reservation
Event "1" --> "*" TicketOption
Event "1" --> "*" Reservation
Reservation "1" *-- "*" ReservationItem
ReservationItem "*" --> "1" TicketOption

Event --> EventType
Event --> EventStatus
Reservation --> ReservationStatus

'=====================
' NOTAS
'=====================

note top of Customer
  totalAttendances = historial total de asistencias
  currentStreak = contador del programa de fidelización
  Se resetea al usar el pase gratuito
end note

note right of TicketOption::version
  Se utiliza para control de concurrencia con Optimistic Locking.
  Cada vez que se actualiza el stock (sold), la versión aumenta.
  Si dos transacciones intentan modificar la misma fila
  con la misma versión, una falla y evita sobreventa.
end note
@enduml
