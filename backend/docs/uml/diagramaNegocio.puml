@startuml
|Cliente|
start
:Buscar eventos programados;

|Sistema|
:Obtener eventos con status = SCHEDULED;
:Calcular disponibilidad (remaining = capacity - sold);
:Enviar lista al frontend;

|Cliente|
:Ver eventos con disponibilidad;
:Seleccionar evento y tipo de entrada;
:Intentar reservar;

|Sistema|
:Verificar disponibilidad en tiempo real (isReservable);
if (hay stock?) then (Sí)
  :Consultar si el cliente tiene loyaltyFree activo;
  if (tiene pase gratis?) then (Sí)
    :Crear Reservation (loyaltyFree = true, total = 0, status = PAID);
    :Ejecutar reserve(quantity);
    :Resetear currentStreak = 0;
    :Marcar loyaltyFree = false;
  else (No)
    :Crear Reservation (status = PENDING);
    :Esperar pago del cliente;
    |Cliente|
    :Realizar pago;
    |Sistema|
    :Marcar Reservation como PAID;
    :Ejecutar reserve(quantity);
  endif
else (No)
  :Mostrar mensaje "Sin disponibilidad";
endif

|Sistema|
:Evento llega a su fecha;
:Actualizar Event.status = FINISHED;

if (Reservation.status == PAID) then (Sí)
  :Actualizar Customer.totalAttendances++;
  if (Reservation.loyaltyFree == false) then (Pago normal)
    :Incrementar currentStreak++;
    if (currentStreak == 5) then (Sí)
      :Generar nuevo loyaltyFree = true;
    endif
  endif
endif

stop
@enduml
