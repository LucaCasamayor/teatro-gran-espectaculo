openapi: 3.0.1
info:
  title: API - Sistema de Reservas del Teatro Gran Espectáculo
  description: |
    Backend del sistema de gestión de reservas del Teatro Gran Espectáculo.
    Permite administrar eventos, reservas y clientes, con control de disponibilidad
    y beneficios por fidelización para asistentes frecuentes.
  license:
    name: Uso interno - Prueba Técnica Certant
    url: https://www.certant.com
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/events/{id}:
    get:
      tags:
      - event-controller
      operationId: getEventById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
    put:
      tags:
      - event-controller
      operationId: updateEvent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
  /api/customers/{id}:
    get:
      tags:
      - customer-controller
      operationId: getCustomerById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CustomerDTO"
    put:
      tags:
      - customer-controller
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CustomerDTO"
    delete:
      tags:
      - customer-controller
      operationId: deleteCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/reservations:
    get:
      tags:
      - reservation-controller
      operationId: getAllReservations
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationDTO"
    post:
      tags:
      - reservation-controller
      operationId: createReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReservationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDTO"
  /api/events:
    get:
      tags:
      - event-controller
      operationId: getAllEvents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDTO"
    post:
      tags:
      - event-controller
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
  /api/customers:
    get:
      tags:
      - customer-controller
      operationId: getAllCustomers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerDTO"
    post:
      tags:
      - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CustomerDTO"
  /api/reservations/{id}/pay:
    patch:
      tags:
      - reservation-controller
      operationId: markAsPaid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDTO"
  /api/events/{id}/status:
    patch:
      tags:
      - event-controller
      operationId: updateEventStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        required: true
        schema:
          type: string
          enum:
          - SCHEDULED
          - CANCELLED
          - FINISHED
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
  /api/reservations/{id}:
    get:
      tags:
      - reservation-controller
      operationId: getReservationById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDTO"
    delete:
      tags:
      - reservation-controller
      operationId: deleteReservation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/reservations/customer/{customerId}:
    get:
      tags:
      - reservation-controller
      operationId: getReservationsByCustomer
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationDTO"
  /api/events/upcoming:
    get:
      tags:
      - event-controller
      operationId: getScheduledEvents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDTO"
  /api/customers/free-pass:
    get:
      tags:
      - customer-controller
      operationId: getCustomersWithFreePass
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerDTO"
components:
  schemas:
    EventDTO:
      required:
      - startDateTime
      - title
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        type:
          type: string
          enum:
          - THEATER
          - CONCERT
          - CONFERENCE
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - SCHEDULED
          - CANCELLED
          - FINISHED
        description:
          type: string
        ticketOptions:
          type: array
          items:
            $ref: "#/components/schemas/TicketOptionDTO"
    TicketOptionDTO:
      required:
      - capacity
      - name
      - price
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          minimum: 0
          type: number
        capacity:
          minimum: 1
          type: integer
          format: int32
        sold:
          type: integer
          format: int32
        available:
          type: integer
          format: int32
    CustomerDTO:
      required:
      - email
      - firstName
      - lastName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        registrationDate:
          type: string
          format: date-time
        totalAttendances:
          type: integer
          format: int32
        currentStreak:
          type: integer
          format: int32
        loyaltyFree:
          type: boolean
    CreateReservationRequest:
      required:
      - attendeeName
      - customerId
      - eventId
      - items
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        eventId:
          type: integer
          format: int64
        attendeeName:
          type: string
        attendedBy:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReservationItemRequest"
    ReservationItemRequest:
      required:
      - quantity
      - ticketOptionId
      type: object
      properties:
        ticketOptionId:
          type: integer
          format: int64
        quantity:
          minimum: 1
          type: integer
          format: int32
    ReservationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        customerName:
          type: string
        eventId:
          type: integer
          format: int64
        eventTitle:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - PAID
          - CANCELLED
        loyaltyFree:
          type: boolean
        total:
          type: number
        createdAt:
          type: string
          format: date-time
        paidAt:
          type: string
          format: date-time
        attendeeName:
          type: string
        attendedBy:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReservationItemDTO"
    ReservationItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ticketOptionId:
          type: integer
          format: int64
        ticketOptionName:
          type: string
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
